# Aibotti
testisivusto: https://samikoskioamk.github.io/ArcticAIBotti/

Linuxissa pitää ajaa virtual environmentissä, joten luo se eka. Esim:
python3 -m venv AAIBOT
source AAIBOT/bin/activate
Sitten aja tässä jo kaikki projektin tarvitsemat kirjastot: pip install -r requirements.txt
Käynnistä VS Code: code .
Kun VS Code käynnissä, muista valita oikea Python Interpreter (ctrl-shif-p)
Listalta luomasi venv, eli tässä tapauksessa tuo AAIBOT


Paikallisesti toimiva AI-hakubotti, joka vektorisoi verkkosivun sisällön ja vastaa kysymyksiin Ollama-kielimallin avulla. 
Toteutettu FastAPI + Ollama + HTML/JS-pohjalla.

Ohjeet miten saat pyörimään omalla koneellasi ja omalla datallasi.

Ollama linuxissa:
asenna: curl -fsSL https://ollama.com/install.sh | sh
käynnistä: 
ollama serve &  (en tiiä tarviiko. Voi nakkoa erroria.)
ollama run llama3
tarkista onko jo päällä:
(AAIBOT) samikoski@SamiPC:~/ArcticAI-botti-WSL$ curl http://localhost:11434
Ollama is running(AAIBOT) samikoski@SamiPC:~/ArcticAI-botti-WSL$
KÄynnistä kielimalli linux kehoitteesta: ollama run llama3
Kun et enää tarvi "killall ollama" tai jos syvemmällä niin "sudo pkill -u ollama"



Docker, eli kontti.
Jos pyörität palvelua Windows koneella tarvit dockerin ja WSL:n (Windows Subsystem Linux)
Asenna ensin Docker: https://www.docker.com/products/docker-desktop/
Sen jälkeen avaa Windows Powershell (komentokehoiteikkuna) 
ja asenna WSL: wsl --install  
(By default, the installed Linux distribution will be Ubuntu)
Käynnistä Ubuntu windows start-valikosta ja luo käyttäjätunnukset.
Kun olet kirjautunut Ubuntuun, on suositeltavaa päivittää paketit: sudo apt update && sudo apt upgrade
Ubuntussa "explorer.exe ." näyttää kansion missä järjestelmä on. On suositeltavaa säilyttää projektin tiedostot samassa järjestelmässä.

Kopioi kaikki JSONL-tiedostot polusta ./VectorDB/ alikansioineen
Yhdistää ne automaattisesti yhteen tiedostoon: all-data.jsonl
Luo Ollama-mallin nimeltä oma-malli, joka käyttää all-data.jsonl-embeddingejä
Käynnistää:
ollama serve
ollama create

Dockerin kaikki rimpsut laittaa se varmasti puhtaalta pöydältä:
docker build --no-cache -t aaibot-rag .
docker rm -f aaibot-rag
docker run -d -p 8000:8000 -p 11434:11434 --name aaibot-rag aaibot-rag

tai jos ei tarvi ihan puhtaalta niin:
docker rm -f aaibot-rag
docker build -t aaibot-rag .
docker run -d -p 8000:8000 -p 11434:11434 --name aaibot-rag aaibot-rag




Node.js-proxyn server.js porttiin 8000
https://docs.docker.com/desktop/features/wsl/#wsl-2-security-in-docker-desktop

https://learn.microsoft.com/en-gb/windows/wsl/tutorials/wsl-vscode

commit testing


VectorDB rakenne
ArcticAI-botti-WSL/
├── VectorDB/                  ← Käytettävä data. JSONL-tiedostot alikansioineen, jotka ite crawlattu.
├── rag_vector/
│   ├── app.py                 ← FastAPI-palvelin
│   ├── embedder.py            ← Embeddingien luonti
│   ├── query.py               ← Haku logiikka
│   └── db/                    ← ChromaDB-tietokanta
└── Dockerfile                 ← päivitetään tämän mukaan
